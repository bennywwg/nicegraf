#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_ConstantBuffer_VertexShaderUniforms
{
    float4x4 objToViewTransform;
    float4x4 viewToClipTransform;
};

struct VSMain_out
{
    float out_var_ATTR0 [[user(locn0)]];
    float4 gl_Position [[position]];
};

struct VSMain_in
{
    float4 in_var_SV_Position [[attribute(0)]];
};

vertex VSMain_out VSMain(VSMain_in in [[stage_in]], constant type_ConstantBuffer_VertexShaderUniforms& vertShaderUniforms [[buffer(0)]])
{
    VSMain_out out = {};
    out.gl_Position = vertShaderUniforms.viewToClipTransform * (vertShaderUniforms.objToViewTransform * float4(in.in_var_SV_Position.xyz, 1.0));
    out.out_var_ATTR0 = in.in_var_SV_Position.y;
    return out;
}

/**NGF_NATIVE_BINDING_MAP
(0 0) : 0
(-1 -1) : -1
**/
