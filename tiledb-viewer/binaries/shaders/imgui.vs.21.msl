#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_ConstantBuffer_VertShaderUniforms
{
    float4x4 projectionTransform;
};

struct VSMain_out
{
    float4 out_var_NGF_COLOR [[user(locn0)]];
    float2 out_var_NGF_UV [[user(locn1)]];
    float4 gl_Position [[position]];
};

struct VSMain_in
{
    float2 in_var_ATTR0 [[attribute(0)]];
    float2 in_var_TEXCOORD0 [[attribute(1)]];
    float4 in_var_COLOR0 [[attribute(2)]];
};

vertex VSMain_out VSMain(VSMain_in in [[stage_in]], constant type_ConstantBuffer_VertShaderUniforms& vertShaderUniforms [[buffer(0)]])
{
    VSMain_out out = {};
    out.gl_Position = vertShaderUniforms.projectionTransform * float4(in.in_var_ATTR0, 0.0, 1.0);
    out.out_var_NGF_COLOR = in.in_var_COLOR0;
    out.out_var_NGF_UV = in.in_var_TEXCOORD0;
    return out;
}

/**NGF_NATIVE_BINDING_MAP
(0 0) : 0
(0 1) : 0
(0 2) : 0
(-1 -1) : -1
**/
