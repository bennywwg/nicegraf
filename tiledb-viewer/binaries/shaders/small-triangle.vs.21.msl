#pragma clang diagnostic ignored "-Wmissing-prototypes"
#pragma clang diagnostic ignored "-Wmissing-braces"

#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

template<typename T, size_t Num>
struct spvUnsafeArray
{
    T elements[Num ? Num : 1];
    
    thread T& operator [] (size_t pos) thread
    {
        return elements[pos];
    }
    constexpr const thread T& operator [] (size_t pos) const thread
    {
        return elements[pos];
    }
    
    device T& operator [] (size_t pos) device
    {
        return elements[pos];
    }
    constexpr const device T& operator [] (size_t pos) const device
    {
        return elements[pos];
    }
    
    constexpr const constant T& operator [] (size_t pos) const constant
    {
        return elements[pos];
    }
    
    threadgroup T& operator [] (size_t pos) threadgroup
    {
        return elements[pos];
    }
    constexpr const threadgroup T& operator [] (size_t pos) const threadgroup
    {
        return elements[pos];
    }
};

constant spvUnsafeArray<float4, 3> _26 = spvUnsafeArray<float4, 3>({ float4(-1.0, 1.0, 0.0, 1.0), float4(3.0, 1.0, 0.0, 1.0), float4(-1.0, -3.0, 0.0, 1.0) });
constant spvUnsafeArray<float4, 3> _30 = spvUnsafeArray<float4, 3>({ float4(1.0, 0.0, 0.0, 1.0), float4(0.0, 1.0, 0.0, 1.0), float4(0.0, 0.0, 1.0, 1.0) });

struct VSMain_out
{
    float4 out_var_NGF_COLOR [[user(locn0)]];
    float4 gl_Position [[position]];
};

vertex VSMain_out VSMain(uint gl_VertexIndex [[vertex_id]])
{
    VSMain_out out = {};
    uint _35 = gl_VertexIndex % 3u;
    out.gl_Position = float4(_26[_35].xyz * 0.25, 1.0);
    out.out_var_NGF_COLOR = _30[_35];
    return out;
}

/**NGF_NATIVE_BINDING_MAP
(-1 -1) : -1
**/
